<?xml version="1.0" encoding="UTF-8"?>
<!-- *Mapper.xml 정의->*(테이블명)Mapper.xml -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="foodsMapper">

<select id="foodsList" resultType="com.foods.vo.FoodsVO">
		SELECT foodsId,foodsName, foodsDetail, foodsPrice, cateCode, foodsRegdate,foodsUpdatedate,foodsImg FROM foods_detail order by foodsId
	</select>
	
	<!-- 삽입 -->
	<!-- 입력폼에서 vo에 데이터가 저장 vo변수를 사용하려면 EL -->
	<!--parameterType="com.spring.memver.vo.MemberVO" -->
	<insert id="foodsWrite">
		INSERT INTO foods_detail(foodsName,cateCode, foodsPrice,foodsDetail,foodsImg) 
		values (#{foodsName}, #{cateCode}, #{foodsPrice}, #{foodsDetail},#{foodsImg}) 
	</insert>
	<!-- 해당자료만 조회 -->
	<select id="foodsView" resultType="com.foods.vo.FoodsVO">
		SELECT foodsId, foodsName, cateCode, foodsPrice, foodsDetail,foodsregdate,foodsImg  
		FROM foods_detail WHERE foodsId=#{foodsId}
	</select> 
	<update id="foodsUpdate">
		UPDATE foods_detail SET
		foodsName=#{foodsName}, 
		cateCode=#{cateCode}, 
		foodsPrice=#{foodsPrice},
		foodsDetail=#{foodsDetail}
		foodsImg=#{foodsImg}		
		WHERE foodsId=#{foodsId}
	</update> 
	 <delete id="foodsDelete">
    DELETE FROM foods_detail WHERE foodsId=#{foodsId}
</delete>
<!-- 상품 검색기능을 추가 -->
	<!-- 제목+이름, 제목(title), 이름(writer) -->
	<!-- 모든 조회 + 옵션으로 추가기능 -->
	<!-- 질의어를 추가 include refid="추가" -->
	<select id="listAll" resultType="com.foods.vo.FoodsVO">
		SELECT foodsId, foodsName, cateCode, foodsPrice, foodsDetail,foodsregdate  
		FROM foods_detail
		<include refid="search"></include> <!-- 질의어에 해당부분을 추가 -->
		<include refid="pageingFooter"></include>
	</select> 
	<!-- sql의 일부분을 분리해서 선언할 때 -->
	<!-- == 같은것 찾을 때, like 포함되어 있는 것 찾을 때 -->
	<!-- writer like 홍길동%-시작하는 단어, %홍길동-끝나는 단어, %홍길동%-포함된 단어  -->
	<sql id = "search">
		<choose>
			<when test="searchOption == 'all'">
				<!-- 모든곳에서 조회 -->
				WHERE (foodsName like concat('%',#{keyword},'%')
				OR cateCode like concat('%',#{keyword},'%')
				OR foodsDetail like concat('%',#{keyword},'%')
			</when>
			<otherwise>
				<!-- 해당부분에서만 조회 -->
				WHERE (${searchOption} like concat('%',#{keyword},'%'))
			</otherwise>
		</choose>		
	</sql>
	
	<!-- 페이징 sql -->
	<sql id="pageingFooter">	    
	   <!--  LIMIT #{end} OFFSET #{start}  -->
	   		 LIMIT #{end} OFFSET #{start} 
	</sql>	
</mapper>
<!-- mapper를 완성한 후에 dao로 가서 작업 -->
